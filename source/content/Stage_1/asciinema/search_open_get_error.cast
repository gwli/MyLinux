{"version": 2, "env": {"TERM": "xterm-256color", "SHELL": "/bin/bash"}, "width": 123, "height": 34, "timestamp": 1553601110}
[0.189732, "o", "\u001b]0;test@localhost: ~/git/libfuse\u0007\u001b[01;32mtest@localhost\u001b[00m:\u001b[01;34m~/git/libfuse\u001b[00m$ "]
[0.924048, "o", "#"]
[1.563071, "o", "o"]
[1.687922, "o", "p"]
[1.849075, "o", "e"]
[1.990744, "o", "n"]
[2.152205, "o", " "]
[3.068413, "o", "a"]
[3.205832, "o", "l"]
[3.367248, "o", "l"]
[3.487437, "o", " "]
[3.687165, "o", "t"]
[3.78598, "o", "h"]
[3.908802, "o", "e"]
[4.008091, "o", " "]
[4.223471, "o", "f"]
[4.321167, "o", "i"]
[4.493623, "o", "l"]
[4.612215, "o", "e"]
[4.816507, "o", "s"]
[4.91357, "o", " "]
[5.283625, "o", "o"]
[6.402075, "o", "\b\u001b[K"]
[6.654399, "o", "i"]
[6.829758, "o", "n"]
[6.991238, "o", "c"]
[7.091633, "o", "l"]
[7.271963, "o", "u"]
[7.349037, "o", "d"]
[7.531669, "o", "e"]
[8.201371, "o", "\b\u001b[K"]
[8.427472, "o", "i"]
[8.606332, "o", "n"]
[8.725471, "o", "g"]
[8.945347, "o", " "]
[9.31215, "o", "\""]
[9.592242, "o", "o"]
[9.770996, "o", "p"]
[9.931592, "o", "e"]
[10.071219, "o", "n"]
[10.516036, "o", "\""]
[11.544493, "o", " "]
[11.714986, "o", "a"]
[11.881423, "o", "n"]
[11.981029, "o", "d"]
[12.104208, "o", " "]
[12.308087, "o", "g"]
[12.425165, "o", "e"]
[12.546005, "o", "t"]
[12.667476, "o", " "]
[13.118242, "o", "a"]
[13.319286, "o", " "]
[13.887852, "o", "l"]
[14.088737, "o", "i"]
[14.20806, "o", "s"]
[14.3297, "o", "t"]
[14.511142, "o", " "]
[14.867065, "o", "o"]
[14.969483, "o", "f"]
[15.090155, "o", " "]
[15.97603, "o", "e"]
[16.257837, "o", "r"]
[16.422843, "o", "r"]
[16.673772, "o", "o"]
[16.793279, "o", "r"]
[18.593529, "o", "\r\n"]
[18.636266, "o", "\u001b]0;test@localhost: ~/git/libfuse\u0007\u001b[01;32mtest@localhost\u001b[00m:\u001b[01;34m~/git/libfuse\u001b[00m$ "]
[20.2125, "o", "f"]
[20.286394, "o", "i"]
[20.452337, "o", "n"]
[20.546299, "o", "d"]
[20.652767, "o", " "]
[20.981364, "o", "-"]
[21.203129, "o", "i"]
[21.364153, "o", "n"]
[21.498346, "o", "a"]
[22.003327, "o", "me "]
[23.723281, "o", "\""]
[24.363483, "o", "*"]
[24.685232, "o", "."]
[24.866708, "o", "c"]
[25.213728, "o", "\""]
[25.446764, "o", " "]
[27.681054, "o", "-"]
[28.128894, "o", "t"]
[28.842104, "o", "\r\n-true  -type  \r\n\u001b]0;test@localhost: ~/git/libfuse\u0007\u001b[01;32mtest@localhost\u001b[00m:\u001b[01;34m~/git/libfuse\u001b[00m$ find -iname \"*.c\" -t"]
[29.578061, "o", "y"]
[29.760442, "o", "pe "]
[31.135259, "o", "\r\nb  c  d  f  l  p  s  \r\n"]
[31.135459, "o", "\u001b]0;test@localhost: ~/git/libfuse\u0007\u001b[01;32mtest@localhost\u001b[00m:\u001b[01;34m~/git/libfuse\u001b[00m$ find -iname \"*.c\" -type "]
[32.744885, "o", "f"]
[32.903403, "o", " "]
[33.762886, "o", "|"]
[34.158227, "o", "g"]
[34.33847, "o", "r"]
[34.458809, "o", "e"]
[34.558364, "o", "p"]
[34.679278, "o", " "]
[35.02447, "o", "\""]
[35.781061, "o", "o"]
[35.959696, "o", "p"]
[36.118686, "o", "e"]
[36.258847, "o", "n"]
[37.817287, "o", "\""]
[38.148802, "o", "\r\n"]
[38.193146, "o", "\u001b]0;test@localhost: ~/git/libfuse\u0007\u001b[01;32mtest@localhost\u001b[00m:\u001b[01;34m~/git/libfuse\u001b[00m$ "]
[39.991366, "o", "find -iname \"*.c\" -type f |grep \"open\""]
[41.548053, "o", "\b\u001b[K"]
[41.749308, "o", "\b\u001b[K"]
[41.935749, "o", "\b\u001b[K"]
[42.074131, "o", "\b\u001b[K"]
[42.23668, "o", "\b\u001b[K"]
[42.376172, "o", "\b\u001b[K"]
[42.498368, "o", "\b\u001b[K"]
[42.638415, "o", "\b\u001b[K"]
[42.810914, "o", "\b\u001b[K"]
[42.995847, "o", "\b\u001b[K"]
[43.133065, "o", "\b\u001b[K"]
[43.405454, "o", "x"]
[43.54608, "o", "a"]
[43.709021, "o", "r"]
[43.904042, "o", "g"]
[44.000954, "o", "s"]
[44.144713, "o", " "]
[44.887927, "o", "\""]
[45.311785, "o", "\b\u001b[K"]
[45.417889, "o", "g"]
[45.588374, "o", "r"]
[45.686682, "o", "e"]
[45.787015, "o", "p"]
[45.951101, "o", " "]
[46.209828, "o", "\""]
[46.703594, "o", "o"]
[46.833782, "o", "p"]
[46.994312, "o", "e"]
[47.114579, "o", "n"]
[47.793513, "o", "\""]
[48.413885, "o", "\r\n"]
[48.4216, "o", "./example/hello.c:static int hello_open(const char *path, struct fuse_file_info *fi)\r\n./example/hello.c:\t.open\t\t= hello_open,\r\n"]
[48.42167, "o", "./example/cuse_client.c:\tfd = open(argv[1], O_RDWR);\r\n./example/cuse_client.c:\t\tperror(\"open\");\r\n./example/notify_store_retrieve.c: * an individual bit (cf. open(2)) */\r\n./example/notify_store_retrieve.c:static void tfs_open(fuse_req_t req, fuse_ino_t ino,\r\n./example/notify_store_retrieve.c:        fuse_reply_open(req, fi);"]
[48.422158, "o", "\r\n./example/notify_store_retrieve.c:        fprintf(stderr, \"Got open for non-existing inode!\\n\");\r\n./example/notify_store_retrieve.c:    .open\t= tfs_open,\r\n./example/invalidate_path.c:static int xmp_open(const char *path, struct fuse_file_info *fi) {\r\n./example/invalidate_path.c:\t\t.open     = xmp_open,\r\n./example/ioctl_client.c:\tfd = open(argv[1], O_RDWR);\r\n./example/ioctl_client.c:\t\tperror(\"open\");\r\n./example/notify_inval_inode.c: * an individual bit (cf. open(2)) */\r\n./example/notify_inval_inode.c:static void tfs_open(fuse_req_t req, fuse_ino_t ino,\r\n./example/notify_inval_inode.c:        fuse_reply_open(req, fi);\r\n./example/notify_inval_inode.c:        fprintf(stderr, \"Got open for non-existing inode!\\n\");\r\n./example/notify_inval_inode.c:    .open\t= tfs_open,\r\n./example/poll.c: * fsel_open_mask is used to limit the number of opens to 1 per file.\r\n./example/poll.c: * unique fh per open file.  Lifting this would require proper open\r\n./example/poll.c:static unsigned fsel_open_mask;\r\n./example/poll.c:static i"]
[48.422189, "o", "nt fsel_open(const char *path, struct fuse_file_info *fi)\r\n./example/poll.c:\tif (fsel_open_mask & (1 << idx))\r\n./example/poll.c:\tfsel_open_mask |= (1 << idx);\r\n./example/poll.c:\tfsel_open_mask &= ~(1 << idx);\r\n./example/poll.c:\t.open\t\t= fsel_open,\r\n./example/poll_client.c:\t\tfds[i] = open(name, O_RDONLY);\r\n./example/poll_client.c:\t\t\tperror(\"open\");\r\n./example/passthrough_ll.c: * until the file is not opened anymore would make the example much\r\n./example/passthrough_ll.c:\tnewfd = openat(lo_fd(req, parent), name, O_PATH | O_NOFOLLOW);\r\n./example/passthrough_ll.c:static void lo_opendir(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi)\r\n./example/passthrough_ll.c:\td->fd = openat(lo_fd(req, ino), \".\", O_RDONLY);\r\n./example/passthrough_ll.c:\td->dp = fdopendir(d->fd);\r\n./example/passthrough_ll.c:\tfuse_reply_open(req, fi);\r\n./example/passthrough_ll.c:\tfd = openat(lo_fd(req, parent), name,\r\n./example/passthrough_ll.c:static void lo_open(fuse_req_t req, fuse_ino_t ino,\r\n./example/passthrough_ll.c:\t\tfprintf(stde"]
[48.422208, "o", "rr, \"lo_open(ino=%\" PRIu64 \", flags=%d)\\n\",\r\n./example/passthrough_ll.c:\t   when userspace opened write-only */\r\n./example/passthrough_ll.c:\tfd = open(buf, fi->flags & ~O_NOFOLLOW);\r\n./example/passthrough_ll.c:\tfuse_reply_open(req, fi);\r\n./example/passthrough_ll.c:\t.opendir\t= lo_opendir,\r\n./example/passthrough_ll.c:\t.open\t\t= lo_open,\r\n./example/passthrough_ll.c:\tlo.root.fd = open(\"/\", O_PATH);\r\n./example/passthrough_ll.c:\t\terr(1, \"open(\\\"/\\\", O_PATH)\");\r\n./example/null.c:static int null_open(const char *path, struct fuse_file_info *fi)\r\n./example/null.c:\t.open\t\t= null_open,\r\n./example/cuse.c:static void cusexmp_open(fuse_req_t req, struct fuse_file_info *fi)\r\n./example/cuse.c:\tfuse_reply_open(req, fi);\r\n./example/cuse.c:\t.open\t\t= cusexmp_open,\r\n./example/passthrough.c:\tdp = opendir(path);\r\n./example/passthrough.c:\t\tres = open(path, O_CREAT | O_EXCL | O_WRONLY, mode);\r\n./example/passthrough.c:\tres = open(path, fi->flags, mode);\r\n./example/passthrough.c:static int xmp_open(const char *path, struct fuse_file_inf"]
[48.422231, "o", "o *fi)\r\n./example/passthrough.c:\tres = open(path, fi->flags);\r\n./example/passthrough.c:\t\tfd = open(path, O_RDONLY);\r\n./example/passthrough.c:\t\tfd = open(path, O_WRONLY);\r\n./example/passthrough.c:\t\tfd = open(path, O_WRONLY);\r\n./example/passthrough.c:\t.open\t\t= xmp_open,\r\n"]
[48.422388, "o", "./example/hello_ll.c:static void hello_ll_open(fuse_req_t req, fuse_ino_t ino,\r\n./example/hello_ll.c:\t\tfuse_reply_open(req, fi);\r\n./example/hello_ll.c:\t.open\t\t= hello_ll_open,\r\n./example/ioctl.c:static int fioc_open(const char *path, struct fuse_file_info *fi)\r\n./example/ioctl.c:\t.open\t\t= fioc_open,\r\n./example/passthrough_fh.c:static int xmp_opendir(const char *path, struct fuse_file_info *fi)\r\n./example/passthrough_fh.c:\td->dp = opendir(path);\r\n./example/passthrough_fh.c:\tfd = open(path, fi->flags, mode);\r\n./example/passthrough_fh.c:static int xmp_open(const char *path, struct fuse_file_info *fi)\r\n./example/passthrough_fh.c:\tfd = open(path, fi->flags);\r\n./example/passthrough_fh.c:\t/* This is called from every close on an open file, so call the\r\n./example/passthrough_fh.c:\t   called multiple times for an open file, this must not really\r\n./example/passthrough_fh.c:\t.opendir\t= xmp_opendir,\r\n./example/passthrough_fh.c:\t.open\t\t= xmp_open,\r\n./test/test_setattr.c:static void tfs_open(fuse_req_t req, fuse_ino_t ino,"]
[48.422848, "o", "\r\n./test/test_setattr.c:        fuse_reply_open(req, fi);\r\n./test/test_setattr.c:    .open\t= tfs_open,\r\n./test/test_setattr.c:    fd = open(fname, O_WRONLY);\r\n./test/test_write_cache.c:static void tfs_open(fuse_req_t req, fuse_ino_t ino,\r\n./test/test_write_cache.c:        fuse_reply_open(req, fi);\r\n./test/test_write_cache.c:    .open\t= tfs_open,\r\n./test/test_write_cache.c:    assert((fd = open(\"/dev/urandom\", O_RDONLY)) != -1);\r\n./test/test_write_cache.c:    fd = open(fname, O_WRONLY);\r\n./test/test_syscalls.c:\tint fd = open(path, O_RDONLY);\r\n./test/test_syscalls.c:\t\tPERROR(\"open\");\r\n./test/test_syscalls.c:\tdp = opendir(path);\r\n./test/test_syscalls.c:\t\tPERROR(\"opendir\");\r\n./test/test_syscalls.c:\tfd = open(testfile, O_WRONLY);\r\n./test/test_syscalls.c:\t\tPERROR(\"open\");\r\n./test/test_syscalls.c:\tdp = opendir(testdir);\r\n./test/test_syscalls.c:\t\tPERROR(\"opendir\");\r\n./test/test_syscalls.c:\tfd = open(testfile, O_CREAT | O_RDWR | O_TRUNC, 0644);\r\n./test/test_syscalls.c:#define test_open(exist, flags, mode)  do_test_ope"]
[48.422917, "o", "n(exist, flags, #flags, mode)\r\n./test/test_syscalls.c:static int do_test_open(int exist, int flags, const char *flags_str, int mode)\r\n./test/test_syscalls.c:\tstart_test(\"open(%s, %s, 0%03o)\", exist ? \"+\" : \"-\", flags_str, mode);\r\n./test/test_syscalls.c:\tfd = open(testfile, flags, mode);\r\n./test/test_syscalls.c:\t\t\tERROR(\"open should have failed\");\r\n./test/test_syscalls.c:\t\t\tERROR(\"open should have failed\");\r\n./test/test_syscalls.c:\t\tPERROR(\"open\");\r\n./test/test_syscalls.c:#define test_open_acc(flags, mode, err)\t \\\r\n./test/test_syscalls.c:\tdo_test_open_acc(flags, #flags, mode, err)\r\n./test/test_syscalls.c:static int do_test_open_acc(int flags, const char *flags_str, int mode, int err)\r\n./test/test_syscalls.c:\tstart_test(\"open_acc(%s) mode: 0%03o message: '%s'\", flags_str, mode,\r\n./test/test_syscalls.c:\tfd = open(testfile, flags);\r\n./test/test_syscalls.c:\t\t\tPERROR(\"open\");\r\n./test/test_syscalls.c:\t\t\tERROR(\"open should have failed\");\r\n./test/test_syscalls.c:\tres = open(PATH(\"a/foo\"), O_CREAT, 0644);\r\n./test/test_"]
[48.422995, "o", "syscalls.c:\t\tPERROR(\"open\");\r\n./test/test_syscalls.c:\tres = open(PATH(\"a/bar\"), O_CREAT, 0644);\r\n./test/test_syscalls.c:\t\tPERROR(\"open\");\r\n./test/test_syscalls.c:\tstart_test(\"open(%s) in read-only directory\", flags_str);\r\n./test/test_syscalls.c:\tfd = open(subfile, flags, 0644);\r\n./test/test_syscalls.c:\t\tERROR(\"open should have failed\");\r\n./test/test_syscalls.c:\terr += test_open(0, O_RDONLY, 0);\r\n./test/test_syscalls.c:\terr += test_open(1, O_RDONLY, 0);\r\n./test/test_syscalls.c:\terr += test_open(1, O_RDWR, 0);\r\n./test/test_syscalls.c:\terr += test_open(1, O_WRONLY, 0);\r\n./test/test_syscalls.c:\terr += test_open(0, O_RDWR | O_CREAT, 0600);\r\n./test/test_syscalls.c:\terr += test_open(1, O_RDWR | O_CREAT, 0600);\r\n./test/test_syscalls.c:\terr += test_open(0, O_RDWR | O_CREAT | O_TRUNC, 0600);\r\n./test/test_syscalls.c:\terr += test_open(1, O_RDWR | O_CREAT | O_TRUNC, 0600);\r\n./test/test_syscalls.c:\terr += test_open(0, O_RDONLY | O_CREAT, 0600);\r\n./test/test_syscalls.c:\terr += test_open(0, O_RDONLY | O_CREAT, 0400);\r\n./test"]
[48.423015, "o", "/test_syscalls.c:\terr += test_open(0, O_RDONLY | O_CREAT, 0200);\r\n./test/test_syscalls.c:\terr += test_open(0, O_RDONLY | O_CREAT, 0000);\r\n./test/test_syscalls.c:\terr += test_open(0, O_WRONLY | O_CREAT, 0600);\r\n./test/test_syscalls.c:\terr += test_open(0, O_WRONLY | O_CREAT, 0400);\r\n./test/test_syscalls.c:\terr += test_open(0, O_WRONLY | O_CREAT, 0200);\r\n./test/test_syscalls.c:\terr += test_open(0, O_WRONLY | O_CREAT, 0000);\r\n./test/test_syscalls.c:\terr += test_open(0, O_RDWR | O_CREAT, 0400);\r\n./test/test_syscalls.c:\terr += test_open(0, O_RDWR | O_CREAT, 0200);\r\n./test/test_syscalls.c:\terr += test_open(0, O_RDWR | O_CREAT, 0000);\r\n./test/test_syscalls.c:\terr += test_open(0, O_RDWR | O_CREAT | O_EXCL, 0600);\r\n./test/test_syscalls.c:\terr += test_open(1, O_RDWR | O_CREAT | O_EXCL, 0600);\r\n./test/test_syscalls.c:\terr += test_open(0, O_RDWR | O_CREAT | O_EXCL, 0000);\r\n./test/test_syscalls.c:\terr += test_open(1, O_RDWR | O_CREAT | O_EXCL, 0000);\r\n./test/test_syscalls.c:\terr += test_open_acc(O_RDONLY, 0600, 0);\r\n./test"]
[48.423094, "o", "/test_syscalls.c:\terr += test_open_acc(O_WRONLY, 0600, 0);\r\n./test/test_syscalls.c:\terr += test_open_acc(O_RDWR,   0600, 0);\r\n./test/test_syscalls.c:\terr += test_open_acc(O_RDONLY, 0400, 0);\r\n./test/test_syscalls.c:\terr += test_open_acc(O_WRONLY, 0200, 0);\r\n./test/test_syscalls.c:\t\terr += test_open_acc(O_RDONLY | O_TRUNC, 0400, EACCES);\r\n./test/test_syscalls.c:\t\terr += test_open_acc(O_WRONLY, 0400, EACCES);\r\n./test/test_syscalls.c:\t\terr += test_open_acc(O_RDWR,   0400, EACCES);\r\n./test/test_syscalls.c:\t\terr += test_open_acc(O_RDONLY, 0200, EACCES);\r\n./test/test_syscalls.c:\t\terr += test_open_acc(O_RDWR,   0200, EACCES);\r\n./test/test_syscalls.c:\t\terr += test_open_acc(O_RDONLY, 0000, EACCES);\r\n./test/test_syscalls.c:\t\terr += test_open_acc(O_WRONLY, 0000, EACCES);\r\n./test/test_syscalls.c:\t\terr += test_open_acc(O_RDWR,   0000, EACCES);\r\n./lib/helper.c:\t\tnullfd = open(\"/dev/null\", O_RDWR, 0);\r\n./lib/mount_util.c:\tFILE *f = fopen(\"/proc/filesystems\", \"r\");\r\n./lib/fuse_loop_mt.c:\tclonefd = open(devname, O_RDWR | O_CL"]
[48.423158, "o", "OEXEC);\r\n./lib/fuse_loop_mt.c:\t\tfprintf(stderr, \"fuse: failed to open %s: %s\\n\", devname,\r\n./lib/fuse_lowlevel.c:static void fill_open(struct fuse_open_out *arg,\r\n./lib/fuse_lowlevel.c:\t\targ->open_flags |= FOPEN_DIRECT_IO;\r\n./lib/fuse_lowlevel.c:\t\targ->open_flags |= FOPEN_KEEP_CACHE;\r\n./lib/fuse_lowlevel.c:\t\targ->open_flags |= FOPEN_NONSEEKABLE;\r\n./lib/fuse_lowlevel.c:\tchar buf[sizeof(struct fuse_entry_out) + sizeof(struct fuse_open_out)];\r\n./lib/fuse_lowlevel.c:\tstruct fuse_open_out *oarg = (struct fuse_open_out *) (buf + entrysize);\r\n./lib/fuse_lowlevel.c:\tfill_open(oarg, f);\r\n./lib/fuse_lowlevel.c:\t\t"]
[48.423228, "o", "\t     entrysize + sizeof(struct fuse_open_out));\r\n./lib/fuse_lowlevel.c:int fuse_reply_open(fuse_req_t req, const struct fuse_file_info *f)\r\n./lib/fuse_lowlevel.c:\tstruct fuse_open_out arg;\r\n./lib/fuse_lowlevel.c:\tfill_open(&arg, f);\r\n./lib/fuse_lowlevel.c:\t\t\tname = (char *) inarg + sizeof(struct fuse_open_in);\r\n./lib/fuse_lowlevel.c:static void do_open(fuse_req_t req, fuse_ino_t nodeid, const void *inarg)\r\n./lib/fuse_lowlevel.c:\tstruct fuse_open_in *arg = (struct fuse_open_in *) inarg;\r\n./lib/fuse_lowlevel.c:\tif (req->se->op.open)\r\n"]
[48.423294, "o", "./lib/fuse_lowlevel.c:\t\treq->se->op.open(req, nodeid, &fi);\r\n./lib/fuse_lowlevel.c:\t\tfuse_reply_open(req, &fi);\r\n./lib/fuse_lowlevel.c:static void do_opendir(fuse_req_t req, fuse_ino_t nodeid, const void *inarg)\r\n./lib/fuse_lowlevel.c:\tstruct fuse_open_in *arg = (struct fuse_open_in *) inarg;\r\n./lib/fuse_lowlevel.c:\tif (req->se->op.opendir)\r\n./lib/fuse_lowlevel.c:\t"]
[48.42338, "o", "\treq->se->op.opendir(req, nodeid, &fi);\r\n./lib/fuse_lowlevel.c:\t\tfuse_reply_open(req, &fi);\r\n./lib/fuse_lowlevel.c:\t[FUSE_OPEN]\t   = { do_open,\t       \"OPEN\"\t     },\r\n./lib/fuse_lowlevel.c:\t[FUSE_OPENDIR]\t   = { do_opendir,     \"OPENDIR\"     },\r\n./lib/fuse_lowlevel.c:\t * Make sure file descriptors 0, 1 and 2 are open, otherwise chaos\r\n./lib/fuse_lowlevel.c:\t\tfd = open(\"/dev/null\", O_RDWR);\r\n./lib/fuse_lowlevel.c:\tfd = open(path, O_RDONLY);\r\n"]
[48.423438, "o", "./lib/mount_bsd.c:\tif ((fd = open(dev, O_RDWR)) < 0) {\r\n./lib/mount_bsd.c:\t\tperror(\"fuse: failed to open fuse device\");\r\n./lib/cuse_lowlevel.c:static void cuse_fll_open(fuse_req_t req, fuse_ino_t ino,"]
[48.423506, "o", "\r\n./lib/cuse_lowlevel.c:\treq_clop(req)->open(req, fi);\r\n./lib/cuse_lowlevel.c:\tlop.open\t= clop->open\t\t? cuse_fll_open\t\t: NULL;\r\n./lib/cuse_lowlevel.c:\t * Make sure file descriptors 0, 1 and 2 are open, otherwise chaos\r\n"]
[48.423582, "o", "./lib/cuse_lowlevel.c:\t\tfd = open(\"/dev/null\", O_RDWR);\r\n./lib/cuse_lowlevel.c:\tfd = open(devname, O_RDWR);\r\n./lib/cuse_lowlevel.c:\t\t\tfprintf(stderr, \"cuse: failed to open %s: %s\\n\",\r\n./lib/fuse.c:\tint open_count;\r\n./lib/fuse.c:\tso->handle = dlopen(tmp, RTLD_NOW);\r\n./lib/fuse.c:\t\tfprintf(stderr, \"fuse: dlopen(%s) failed: %s\\n\",\r\n"]
[48.423649, "o", "./lib/fuse.c:\t * Node may still be locked due to interrupt idiocy in open,\r\n./lib/fuse.c:\t * create and opendir\r\n./lib/fuse.c:int fuse_fs_opendir(struct fuse_fs *fs, const char *path,\r\n./lib/fuse.c:\tif (fs->op.opendir) {\r\n./lib/fuse.c:\t"]
[48.423672, "o", "\t\tfprintf(stderr, \"opendir flags: 0x%x %s\\n\", fi->flags,\r\n./lib/fuse.c:\t"]
[48.423699, "o", "\terr = fs->op.opendir(path, fi);\r\n./lib/fuse.c:\t\t\tfprintf(stderr, \"   opendir[%llu] flags: 0x%x %s\\n\","]
[48.423726, "o", "\r\n./lib/fuse.c:int fuse_fs_open(struct fuse_fs *fs, const char *path,\r\n./lib/fuse.c:\tif (fs->op.open) {\r\n./lib/fuse.c:"]
[48.423848, "o", "\t\t\tfprintf(stderr, \"open flags: 0x%x %s\\n\", fi->flags,\r\n./lib/fuse.c:\t\terr = fs->op.open(path, fi);\r\n./lib/fuse.c:\t\t\tfprintf(stderr, \"   open[%llu] flags: 0x%x %s\\n\",\r\n./lib/fuse.c:static int is_open(struct fuse *f, fuse_ino_t dir, const char *name)\r\n./lib/fuse.c:\tint isopen = 0;\r\n./lib/fuse.c:\tif (node && node->open_count > 0)\r\n./lib/fuse.c:\t\tisopen = 1;\r\n./lib/fuse.c:\treturn isopen;"]
[48.42392, "o", "\r\n./lib/fuse.c:\t\tif (!f->conf.hard_remove && is_open(f, parent, name)) {\r\n./lib/fuse.c:\t\t    is_open(f, newdir, newname))\r\n./lib/fuse.c:"]
[48.423939, "o", "\tassert(node->open_count > 0);\r\n./lib/fuse.c:\t--node->open_count;"]
[48.423958, "o", "\r\n./lib/fuse.c:\tif (node->is_hidden && !node->open_count) {\r\n"]
[48.423974, "o", "./lib/fuse.c:\t\tget_node(f, e.ino)->open_count++;\r\n./lib/fuse.c:\t\t\t/* The open syscall was interrupted, so it\r\n./lib/fuse.c:static void open_auto_cache(struct fuse *f, fuse_ino_t ino, const char *path,\r\n./lib/fuse.c:static void fuse_lib_open(fuse_req_t req, fuse_ino_t ino,\r\n./lib/fuse.c:\t\t"]
[48.423989, "o", "err = fuse_fs_open(f->fs, path, fi);\r\n./lib/fuse.c:\t\t\t\topen_auto_cache(f, ino, path, fi);\r\n./lib/fuse.c:\t\tget_node(f, ino)->open_count++;\r\n"]
[48.424004, "o", "./lib/fuse.c:\t\tif (fuse_reply_open(req, fi) == -ENOENT) {\r\n./lib/fuse.c:\t\t\t/* The open syscall was interrupted, so it\r\n./lib/fuse.c:static void fuse_lib_opendir(fuse_req_t req, fuse_ino_t ino,\r\n"]
[48.424023, "o", "./lib/fuse.c:\t\terr = fuse_fs_opendir(f->fs, path, &fi);\r\n./lib/fuse.c:\t\tif (fuse_reply_open(req, llfi) == -ENOENT) {\r\n./lib/fuse.c:\t\t\t/* The opendir syscall was interrupted, so it\r\n"]
[48.424614, "o", "./lib/fuse.c:\t.open = fuse_lib_open,\r\n./lib/fuse.c:\t.opendir = fuse_lib_opendir,\r\n./lib/mount.c:\t\t\tint fd = open(\"/dev/null\", O_RDONLY);\r\n./lib/mount.c:\tfd = open(devname, O_RDWR | O_CLOEXEC);\r\n./lib/mount.c:\t\t\tfprintf(stderr, \"fuse: failed to open %s: %s\\n\",\r\n./lib/modules/subdir.c:static int subdir_opendir(const char *path, struct fuse_file_info *fi)\r\n./lib/modules/subdir.c:\t\terr = fuse_fs_opendir(d->next, newpath, fi);\r\n./lib/modules/subdir.c:static int subdir_open(const char *path, struct fuse_file_info *fi)\r\n./lib/modules/subdir.c:\t\terr = fuse_fs_open(d->next, newpath, fi);\r\n./lib/modules/subdir.c:\t.opendir\t= subdir_opendir,\r\n./lib/modules/subdir.c:\t.open\t\t= subdir_open,\r\n./lib/modules/iconv.c:static int iconv_opendir(const char *path, struct fuse_file_info *fi)\r\n./lib/modules/iconv.c:\t\terr = fuse_fs_opendir(ic->next, newpath, fi);\r\n./lib/modules/iconv.c:static int iconv_open_file(const char *path, struct fuse_file_info *fi)\r\n./lib/modules/iconv.c:\t\terr = fuse_fs_open(ic->next, newpath, fi);\r\n./lib/modul"]
[48.42466, "o", "es/iconv.c:\t.opendir\t= iconv_opendir,\r\n./lib/modules/iconv.c:\t.open\t\t= iconv_open_file,\r\n./lib/modules/iconv.c:\tic->tofs = iconv_open(from, to);\r\n./lib/modules/iconv.c:\tic->fromfs = iconv_open(to, from);\r\n./util/fusermount.c:\tmtablock = open(mtab_lock, O_RDWR | O_CREAT, 0600);\r\n./util/fusermount.c:\t\tfprintf(stderr, \"%s: unable to open fuse lock file: %s\\n\",\r\n./util/fusermount.c:\t\tfprintf(stderr, \"%s: failed to open %s: %s\\n\", progname, mtab,\r\n./util/fusermount.c:\t\tfprintf(stderr, \"%s: failed to open %s: %s\\n\", progname,\r\n./util/fusermount.c:\t\tfprintf(stderr, \"%s: failed to open %s: %s\\n\", progname,\r\n./util/fusermount.c:\t\tfprintf(stderr, \"%s: failed to open %s: %s\\n\", progname, mtab,\r\n./util/fusermount.c:\tFILE *fp = fopen(FUSE_CONF, \"r\");\r\n./util/fusermount.c:\t\tfprintf(stderr, \"%s: failed to open %s: %s\\n\",\r\n./util/fusermount.c:\t\t*mountpoint_fd = open(mnt, O_WRONLY);\r\n./util/fusermount.c:\t\t\tfprintf(stderr, \"%s: failed to open %s: %s\\n\",\r\n./util/fusermount.c:static int try_open(const char *dev, char **devp, int"]
[48.424744, "o", " silent)\r\n./util/fusermount.c:\tint fd = open(dev, O_RDWR);\r\n./util/fusermount.c:\t\tfprintf(stderr, \"%s: failed to open %s: %s\\n\", progname, dev,\r\n./util/fusermount.c:static int try_open_fuse_device(char **devp)\r\n./util/fusermount.c:\tfd = try_open(FUSE_DEV, devp, 0);\r\n./util/fusermount.c:static int open_fuse_device(char **devp)\r\n./util/fusermount.c:\tint fd = try_open_fuse_device(devp);\r\n./util/fusermount.c:\tfd = open_fuse_device(&dev);\r\n"]
[48.463828, "o", "\u001b]0;test@localhost: ~/git/libfuse\u0007\u001b[01;32mtest@localhost\u001b[00m:\u001b[01;34m~/git/libfuse\u001b[00m$ "]
[49.587531, "o", "find -iname \"*.c\" -type f |xargs grep \"open\"\r\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[50.35522, "o", "\u001b[C"]
[50.856581, "o", "\u001b[C"]
[50.885298, "o", "\u001b[C"]
[50.916816, "o", "\u001b[C"]
[50.950313, "o", "\u001b[C"]
[50.992252, "o", "\u001b[C"]
[51.022511, "o", "\u001b[C"]
[51.051864, "o", "\u001b[C"]
[51.083097, "o", "\u001b[C"]
[51.114067, "o", "\u001b[C"]
[51.144386, "o", "\u001b[C"]
[51.176069, "o", "\u001b[C"]
[51.209399, "o", "\u001b[C"]
[51.238611, "o", "\u001b[C"]
[51.268972, "o", "\u001b[C"]
[51.299072, "o", "\u001b[C"]
[51.329528, "o", "\u001b[C"]
[51.36025, "o", "\u001b[C"]
[51.392832, "o", "\u001b[C"]
[51.423406, "o", "\u001b[C"]
[51.455076, "o", "\u001b[C"]
[51.488083, "o", "\u001b[C"]
[51.518332, "o", "\u001b[C"]
[51.547016, "o", "\u001b[C"]
[51.577075, "o", "\u001b[C"]
[51.609819, "o", "\u001b[C"]
[51.642226, "o", "\u001b[C"]
[51.672084, "o", "\u001b[C"]
[51.70228, "o", "\u001b[C"]
[51.733243, "o", "\u001b[C"]
[51.762775, "o", "\u001b[C"]
[51.794071, "o", "\u001b[C"]
[51.826421, "o", "\u001b[C"]
[51.85941, "o", "\u001b[C"]
[52.195223, "o", "\u001b[C"]
[52.417461, "o", "\u001b[C"]
[52.851531, "o", "\u001b[C"]
[53.446906, "o", "\u001b[C \"open\"\b\b\b\b\b\b\b"]
[53.905236, "o", "- \"open\"\b\b\b\b\b\b\b"]
[54.245119, "o", "n \"open\"\b\b\b\b\b\b\b"]
[56.687002, "o", "\b\u001b[1P \"open\"\b\b\b\b\b\b\b"]
[56.987096, "o", "l \"open\"\b\b\b\b\b\b\b"]
[57.561963, "o", "\r\n"]
[57.566519, "o", "./example/hello.c\r\n./example/cuse_client.c\r\n"]
[57.56674, "o", "./example/notify_store_retrieve.c\r\n./example/invalidate_path.c\r\n./example/ioctl_client.c\r\n./example/notify_inval_inode.c\r\n./example/poll.c\r\n./example/poll_client.c\r\n./example/passthrough_ll.c\r\n./example/null.c\r\n./example/cuse.c\r\n./example/passthrough.c\r\n./example/hello_ll.c\r\n./example/ioctl.c\r\n./example/passthrough_fh.c\r\n./test/test_setattr.c\r\n"]
[57.566781, "o", "./test/test_write_cache.c\r\n"]
[57.566808, "o", "./test/test_syscalls.c\r\n"]
[57.566832, "o", "./lib/helper.c"]
[57.567021, "o", "\r\n./lib/mount_util.c\r\n./lib/fuse_loop_mt.c\r\n./lib/fuse_lowlevel.c\r\n./lib/mount_bsd.c\r\n./lib/cuse_lowlevel.c\r\n"]
[57.567054, "o", "./lib/fuse.c\r\n"]
[57.56718, "o", "./lib/mount.c\r\n./lib/modules/subdir.c\r\n./lib/modules/iconv.c\r\n./util/fusermount.c\r\n"]
[57.607915, "o", "\u001b]0;test@localhost: ~/git/libfuse\u0007\u001b[01;32mtest@localhost\u001b[00m:\u001b[01;34m~/git/libfuse\u001b[00m$ "]
[59.14214, "o", "find -iname \"*.c\" -type f |xargs grep -l \"open\"\r\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[60.522764, "o", "\u001b[1@v"]
[60.642983, "o", "\u001b[1@i"]
[60.824404, "o", "\u001b[1@m"]
[60.982266, "o", "\u001b[1@ "]
[62.378415, "o", "\u001b[1@`"]
[64.317991, "o", "\b\u001b[C"]
[64.819446, "o", "\u001b[C"]
[64.850121, "o", "\u001b[C"]
[64.878716, "o", "\u001b[C"]
[64.910215, "o", "\u001b[C"]
[64.940676, "o", "\u001b[C"]
[64.970648, "o", "\u001b[C"]
[65.001823, "o", "\u001b[C"]
[65.032115, "o", "\u001b[C"]
[65.062504, "o", "\u001b[C"]
[65.0935, "o", "\u001b[C"]
[65.127221, "o", "\u001b[C"]
[65.155709, "o", "\u001b[C"]
[65.186134, "o", "\u001b[C"]
[65.216401, "o", "\u001b[C"]
[65.247601, "o", "\u001b[C"]
[65.277844, "o", "\u001b[C"]
[65.30985, "o", "\u001b[C"]
[65.343294, "o", "\u001b[C"]
[65.373387, "o", "\u001b[C"]
[65.403219, "o", "\u001b[C"]
[65.43394, "o", "\u001b[C"]
[65.465309, "o", "\u001b[C"]
[65.495721, "o", "\u001b[C"]
[65.526076, "o", "\u001b[C"]
[65.562677, "o", "\u001b[C"]
[65.590232, "o", "\u001b[C"]
[65.627581, "o", "\u001b[C"]
[65.659973, "o", "\u001b[C"]
[65.693729, "o", "\u001b[C"]
[65.727233, "o", "\u001b[C"]
[65.762822, "o", "\u001b[C"]
[65.801048, "o", "\u001b[C"]
[65.843444, "o", "\u001b[C"]
[65.887949, "o", "\u001b[C"]
[65.918075, "o", "\u001b[C"]
[65.950327, "o", "\u001b[C"]
[65.984481, "o", "\u001b[C"]
[66.014457, "o", "\u001b[C"]
[66.048588, "o", "\u001b[C"]
[66.078081, "o", "\u001b[C"]
[66.107768, "o", "\u001b[C"]
[66.138418, "o", "\u001b[C"]
[66.168039, "o", "\u001b[C"]
[66.197898, "o", "\u001b[C"]
[66.229147, "o", "\u001b[C"]
[66.259356, "o", "\u001b[C"]
[66.289445, "o", "\u0007"]
[66.319537, "o", "\u0007"]
[66.351269, "o", "\u0007"]
[66.382365, "o", "\u0007"]
[66.413031, "o", "\u0007"]
[66.443264, "o", "\u0007"]
[66.473087, "o", "\u0007"]
[66.505498, "o", "\u0007"]
[66.535703, "o", "\u0007"]
[66.565918, "o", "\u0007"]
[66.660486, "o", "\u001b[C"]
[68.39843, "o", "`"]
[69.604306, "o", "\r\n"]
[69.61672, "o", "29 files to edit"]
[69.617511, "o", "\r\n"]
[69.631068, "o", "\u001b[?2004h\u001b[?1049h\u001b[?1h\u001b=\u001b[?2004h\u001b[1;34r\u001b[?12h\u001b[?12l\u001b[22;2t\u001b[22;1t"]
[69.631741, "o", "\u001b[27m\u001b[23m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[34;1H\"./example/hello.c\""]
[69.631855, "o", " 179L, 4195C"]
[69.635844, "o", "\u001b[2;1H▽\u001b[6n\u001b[2;1H  \u001b[1;1H\u001b[>c\u001b]10;?\u0007\u001b]11;?\u0007"]
[69.637293, "o", "\u001b[1;1H\u001b[34m  Copyright (C) \u001b[m\u001b[31m2001\u001b[m\u001b[34m-\u001b[m\u001b[31m2007\u001b[m\u001b[34m  Miklos Szeredi <miklos@szeredi.hu>\r\n\r\n  This program can be distributed under the terms of the GNU GPL.\r\n  See the file COPYING.\r\n*/\r\n\r\n/** @file\r\n *\r\n * minimal example filesystem using high-level API\r\n *\r\n * Compile with:\r\n *\r\n *     gcc -Wall hello.c `pkg-config fuse3 --cflags --libs` -o hello\r\n *\r\n * ## Source code ##\r\n * \\include hello.c\r\n */\u001b[m\r\n\r\n\r\n\u001b[35m#define FUSE_USE_VERSION \u001b[m\u001b[31m31\u001b[m\r\n\r\n\u001b[35m#include \u001b[m\u001b[31m<fuse.h>\u001b[m\r\n\u001b[35m#include \u001b[m\u001b[31m<stdio.h>\u001b[m\r\n\u001b[35m#include \u001b[m\u001b[31m<string.h>\u001b[m\r\n\u001b[35m#include \u001b[m\u001b[31m<errno.h>\u001b[m\r\n\u001b[35m#include \u001b[m\u001b[31m<fcntl.h>\u001b[m\r\n\u001b[35m#include \u001b[m\u001b[31m<stddef.h>\u001b[m\r\n\u001b[35m#include \u001b[m\u001b[31m<assert.h>\u001b[m\r\n\r\n\u001b[34m/*\r\n * Command line options\r\n *\r\n * We can't set default values for the char* fields here because\u001b[m\u001b[34;106H30,1\u001b[11C1%\u001b[28;1H\u001b[?25h"]
[69.662891, "o", "\u001bP+q436f\u001b\\\u001bP+q6b75\u001b\\\u001bP+q6b64\u001b\\\u001bP+q6b72\u001b\\\u001bP+q6b6c\u001b\\\u001bP+q2332\u001b\\\u001bP+q2334\u001b\\\u001bP+q2569\u001b\\\u001bP+q2a37\u001b\\\u001bP+q6b31\u001b\\"]
[69.665732, "o", "\u001b[27m\u001b[23m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[?25l\u001b[1;1H\u001b[96m  Copyright (C) \u001b[m\u001b[95m2001\u001b[m\u001b[96m-\u001b[m\u001b[95m2007\u001b[m\u001b[96m  Miklos Szeredi <miklos@szeredi.hu>\r\n\r\n  This program can be distributed under the terms of the GNU GPL.\r\n  See the file COPYING.\r\n*/\r\n\r\n/** @file\r\n *\r\n * minimal example filesystem using high-level API\r\n *\r\n * Compile with:\r\n *\r\n *     gcc -Wall hello.c `pkg-config fuse3 --cflags --libs` -o hello\r\n *\r\n * ## Source code ##\r\n * \\include hello.c\r\n */\u001b[m\r\n\r\n\r\n\u001b[38;5;81m#define FUSE_USE_VERSION \u001b[m\u001b[95m31\u001b[m\r\n\r\n\u001b[38;5;81m#include \u001b[m\u001b[95m<fuse.h>\u001b[m\r\n\u001b[38;5;81m#include \u001b[m\u001b[95m<stdio.h>\u001b[m\r\n\u001b[38;5;81m#include \u001b[m\u001b[95m<string.h>\u001b[m\r\n\u001b[38;5;81m#include \u001b[m\u001b[95m<errno.h>\u001b[m\r\n\u001b[38;5;81m#include \u001b[m\u001b[95m<fcntl.h>\u001b[m\r\n\u001b[38;5;81m#include \u001b[m\u001b[95m<stddef.h>\u001b[m\r\n\u001b[38;5;81m#include \u001b[m\u001b[95m<assert.h>\u001b[m\r\n\r\n\u001b[96m/*\r\n * Command line options\r\n *\r\n * We can't set default values for the char* fields here because\u001b[m\u001b[34;106H30,1\u001b[11C1%\r\"./example/hello.c\" 179L, 4195C\u001b[28;1H\u001b[?25h"]
[70.502685, "o", "\u001b[?25l\u001b[34;96H:\u001b[28;1H\u001b[34;1H\u001b[K\u001b[34;1H:\u001b[?2004h\u001b[?25h"]
[71.33008, "o", "v\u001b[?25l\u001b[?25h"]
[71.41146, "o", "i\u001b[?25l\u001b[?25h"]
[71.572836, "o", "m\u001b[?25l\u001b[?25h"]
[71.753296, "o", "g\u001b[?25l\u001b[?25h"]
[71.929512, "o", "r\u001b[?25l\u001b[?25h"]
[72.150721, "o", "..."]
[72.151131, "o", "\u001b[?25l\b\b\bep\u001b[34;9H\u001b[K\u001b[34;9H..."]
[72.151299, "o", "\u001b[34;7H\u001b[K\u001b[34;7H\u001b[33;1H\u001b[1m\u001b[7mvimgrep  vimgrepadd                                                                                                        \u001b[m\u001b[34;7H..."]
[72.15137, "o", "\u001b[33;1H\u001b[30m\u001b[103mvimgrep\u001b[m\u001b[1m\u001b[7m \u001b[m\u001b[34;7Hep\u001b[34;9H\u001b[K\u001b[34;9H\u001b[?25h"]
[72.983974, "o", "\u001b[?25l\u001b[33;1H\u001b[96m * We can't set default values for the char* fields here because\u001b[m\u001b[33;65H\u001b[K\u001b[34;106H30,1\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;9H \u001b[?25h"]
[73.524918, "o", "/\u001b[?25l\u001b[?25h"]
[74.239424, "o", "e\u001b[?25l"]
[74.241914, "o", "\u001b[28;8H\u001b[7m\u001b[38;5;81me\u001b[m\u001b[34;106H30,8\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;12H\u001b[?25h"]
[74.401827, "o", "r\u001b[?25l"]
[74.404246, "o", "\u001b[28;8H\u001b[38;5;81me\u001b[m\u001b[5C\u001b[7m\u001b[95mer\u001b[m\u001b[34;106H30,14\u001b[10C1%\u001b[34;106H\u001b[K\u001b[34;13H\u001b[?25h"]
[74.589484, "o", "r\u001b[?25l"]
[74.594335, "o", "\u001b[25;11H\u001b[7m\u001b[95merr\u001b[m\u001b[28;14H\u001b[95mer\u001b[m\u001b[34;106H27,11\u001b[10C1%\u001b[34;106H\u001b[K\u001b[34;14H\u001b[?25h"]
[74.728117, "o", "o\u001b[?25l"]
[74.731377, "o", "\u001b[25;11H\u001b[95merr\u001b[m\u001b[34;106H30,1\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;15H\u001b[?25h"]
[74.847635, "o", "r\u001b[?25l"]
[74.850979, "o", "\u001b[90C30,1\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;16H\u001b[?25h"]
[75.127653, "o", "/\u001b[?25l"]
[75.130151, "o", "\u001b[89C30,1\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;17H"]
[75.130378, "o", "\u001b[?25h"]
[76.285027, "o", "\u001b[?25l"]
[76.286674, "o", "\u001b[89C30,1\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;18H\u001b[?25h"]
[77.181874, "o", "*\u001b[?25l"]
[77.184668, "o", "\u001b[87C30,1\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;19H\u001b[?25h"]
[77.361248, "o", "*\u001b[?25l"]
[77.363329, "o", "\u001b[86C30,1\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;20H\u001b[?25h"]
[78.132766, "o", "/\u001b[?25l"]
[78.136339, "o", "\u001b[85C30,1\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;21H\u001b[?25h"]
[78.941447, "o", "*\u001b[?25l"]
[78.945738, "o", "\u001b[84C30,1\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;22H\u001b[?25h"]
[79.218042, "o", ".\u001b[?25l"]
[79.220998, "o", "\u001b[83C30,1\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;23H\u001b[?25h"]
[79.551558, "o", "c\u001b[?25l"]
[79.556453, "o", "\u001b[82C30,1\u001b[11C1%\u001b[34;106H\u001b[K\u001b[34;24H\u001b[?25h"]
[79.943001, "o", "\r"]
[79.945448, "o", "\u001b[?25lexample/cuse.c\u001b[34;15H\u001b[K"]
[80.018017, "o", "\u001b[34;1H\"./example/cuse_client.c\""]
[80.018181, "o", " 150L, 3026C"]
[80.021038, "o", "\r(1 of 185): perror(\"ioctl\");\u001b[34;29H\u001b[K"]
[80.025471, "o", "\u001b[27m\u001b[23m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[2;9H\u001b[93mif\u001b[m (ret >= \u001b[95m0\u001b[m) {\u001b[3;17H*prev_size = arg.prev_size;\u001b[4;17H*new_size = arg.new_size;\u001b[5;9H} \u001b[93melse\u001b[m\u001b[6;17Hperror(\u001b[95m\"ioctl\"\u001b[m);\u001b[8;9Hfree(arg.buf);\u001b[9;9H\u001b[93mreturn\u001b[m ret;\r\n}\r\n\r\n\u001b[38;5;121mint\u001b[m main(\u001b[38;5;121mint\u001b[m argc, \u001b[38;5;121mchar\u001b[m **argv)\r\n{\u001b[14;9H\u001b[38;5;121msize_t\u001b[m param[\u001b[95m2\u001b[m] = { };\u001b[15;9H\u001b[38;5;121msize_t\u001b[m size, prev_size = \u001b[95m0\u001b[m, new_size = \u001b[95m0\u001b[m;\u001b[16;9H\u001b[38;5;121mchar\u001b[m cmd;\u001b[17;9H\u001b[38;5;121mint\u001b[m fd, i, rc;\u001b[19;9H\u001b[93mif\u001b[m (argc < \u001b[95m3\u001b[m)\u001b[20;17H\u001b[93mgoto\u001b[m usage;\u001b[22;9Hfd = open(argv[\u001b[95m1\u001b[m], O_RDWR);\u001b[23;9H\u001b[93mif\u001b[m (fd < \u001b[95m0\u001b[m) {\u001b[24;17Hperror(\u001b[95m\"open\"\u001b[m);\u001b[25;17H\u001b[93mreturn\u001b[m \u001b[95m1\u001b[m;\u001b[26;9H}\u001b[28;9Hcmd = tolower(argv[\u001b[95m2\u001b[m][\u001b[95m0\u001b[m]);\u001b[29;9Hargc -= \u001b[95m3\u001b[m;\u001b[30;9Hargv += \u001b[95m3\u001b[m;\u001b[32;9H\u001b[93mfor\u001b[m (i = \u001b[95m0\u001b[m; i < argc; i++) {\u001b[33;17H\u001b[38;5;121mchar\u001b[m *endp;\u001b[34;106H86,4-18\u001b[7C68%\r(1 of 185): perror(\"ioctl\");\u001b[34;106H\u001b[K\u001b[34;106H86,4-18\u001b[7C68%\u001b[6;18H\u001b[?25h"]
[82.448868, "o", "\u001b[?25l\u001b[34;96H:\u001b[6;18H\u001b[34;1H\u001b[K\u001b[34;1H:\u001b[?2004h\u001b[?25h"]
[82.730876, "o", "c\u001b[?25l\u001b[?25h"]
[82.889503, "o", "l\u001b[?25l\u001b[?25h"]
[83.197527, "o", "\r"]
[83.198071, "o", "\u001b[?25l\r\n\u001b[30m\u001b[103m 1 ./example/cuse_client.c\u001b[m\u001b[38;5;159m:\u001b[m\u001b[93m86 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"ioctl\");\r\r\n\u001b[38;5;159m 2 ./example/cuse_client.c:\u001b[m\u001b[93m104 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"open\");\r\r\n\u001b[38;5;159m 3 ./example/cuse_client.c:\u001b[m\u001b[93m123 col 6\u001b[m\u001b[38;5;159m:\u001b[m perror(\"ioctl\");\r\r\n\u001b[38;5;159m 4 ./example/cuse_client.c:\u001b[m\u001b[93m130 col 6\u001b[m\u001b[38;5;159m:\u001b[m perror(\"ioctl\");\r\r\n\u001b[38;5;159m 5 ./example/invalidate_path.c:\u001b[m\u001b[93m238 col 20\u001b[m\u001b[38;5;159m:\u001b[m fprintf(stderr, \"error: no mountpoint specified\\n\");"]
[83.198352, "o", "\r\r\n\u001b[38;5;159m 6 ./example/invalidate_path.c:\u001b[m\u001b[93m262 col 57\u001b[m\u001b[38;5;159m:\u001b[m fprintf(stderr, \"pthread_create failed with %s\\n\", strerror(ret));\r\r\n\u001b[38;5;159m 7 ./example/ioctl_client.c:\u001b[m\u001b[93m52 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"open\");\r\r\n\u001b[38;5;159m 8 ./example/ioctl_client.c:\u001b[m\u001b[93m58 col 5\u001b[m\u001b[38;5;159m:\u001b[m perror(\"ioctl\");"]
[83.198688, "o", "\r\r\n\u001b[38;5;159m 9 ./example/ioctl_client.c:\u001b[m\u001b[93m65 col 5\u001b[m\u001b[38;5;159m:\u001b[m perror(\"ioctl\");\r\r\n\u001b[38;5;159m10 example/notify_inval_entry.c:\u001b[m\u001b[93m317 col 20\u001b[m\u001b[38;5;159m:\u001b[m strerror(ret));\r\r\n\u001b[38;5;159m11 ./example/notify_inval_inode.c:\u001b[m\u001b[93m340 col 20\u001b[m\u001b[38;5;159m:\u001b[m strerror(ret));\r\r\n\u001b[38;5;159m12 ./example/notify_store_retrieve.c:\u001b[m\u001b[93m324 col 28\u001b[m\u001b[38;5;159m:\u001b[m strerror(-ret), -ret);"]
[83.199258, "o", "\r\r\n\u001b[38;5;159m13 ./example/notify_store_retrieve.c:\u001b[m\u001b[93m398 col 20\u001b[m\u001b[38;5;159m:\u001b[m strerror(ret));\r\r\n\u001b[38;5;159m14 ./example/null.c:\u001b[m\u001b[93m132 col 24\u001b[m\u001b[38;5;159m:\u001b[m opts.mountpoint, strerror(errno));\r\r\n\u001b[38;5;159m15 ./example/passthrough_ll.c:\u001b[m\u001b[93m288 col 6\u001b[m\u001b[38;5;159m:\u001b[m int error = ENOMEM;\r\r\n\u001b[38;5;159m16 ./example/passthrough_ll.c:\u001b[m\u001b[93m309 col 2\u001b[m\u001b[38;5;159m:\u001b[m error = errno;\r\r\n\u001b[38;5;159m17 ./example/passthrough_ll.c:\u001b[m\u001b[93m316 col 22\u001b[m\u001b[38;5;159m:\u001b[m fuse_reply_err(req, error);\r\r\n\u001b[38;5;159m18 ./example/passthrough_ll.c:\u001b[m\u001b[93m351 col 11\u001b[m\u001b[38;5;159m:\u001b[m goto error;\r\r\n\u001b[38;5;159m19 ./example/passthrough_ll.c:\u001b[m\u001b[93m362 col 10\u001b[m\u001b[38;5;159m:\u001b[m goto error;"]
[83.199579, "o", "\r\r\n\u001b[38;5;159m20 ./example/passthrough_ll.c:\u001b[m\u001b[93m390 col 1\u001b[m\u001b[38;5;159m:\u001b[m error:\r\r\n\u001b[38;5;159m21 ./example/passthrough_ll.c:\u001b[m\u001b[93m464 col 18\u001b[m\u001b[38;5;159m:\u001b[m to return an error here */\r\r\n\u001b[38;5;159m22 ./example/poll.c:\u001b[m\u001b[93m274 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"pthread_mutex_init\");\r\r\n\u001b[38;5;159m23 ./example/poll.c:\u001b[m\u001b[93m280 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"pthread_attr_init\");"]
[83.199685, "o", "\r\r\n\u001b[38;5;159m24 ./example/poll.c:\u001b[m\u001b[93m286 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"pthread_create\");"]
[83.19976, "o", "\r\r\n\u001b[38;5;159m25 ./example/poll_client.c:\u001b[m\u001b[93m47 col 5\u001b[m\u001b[38;5;159m:\u001b[m perror(\"open\");\r\r\n\u001b[38;5;159m26 ./example/poll_client.c:\u001b[m\u001b[93m65 col 5\u001b[m\u001b[38;5;159m:\u001b[m perror(\"select\");"]
[83.199804, "o", "\r\r\n\u001b[38;5;159m27 ./example/poll_client.c:\u001b[m\u001b[93m77 col 6\u001b[m\u001b[38;5;159m:\u001b[m perror(\"read\");"]
[83.200142, "o", "\r\r\n\u001b[38;5;159m28 example/printcap.c:\u001b[m\u001b[93m96 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"mkdtemp\");\r\r\n\u001b[38;5;159m29 ./lib/cuse_lowlevel.c:\u001b[m\u001b[93m309 col 17\u001b[m\u001b[38;5;159m:\u001b[m devname, strerror(errno));\r\r\n\u001b[38;5;159m30 ./lib/fuse.c:\u001b[m\u001b[93m189 col 6\u001b[m\u001b[38;5;159m:\u001b[m int error;\r\r\n\u001b[38;5;159m31 ./lib/fuse.c:\u001b[m\u001b[93m272 col 11\u001b[m\u001b[38;5;159m:\u001b[m tmp, dlerror());\r\r\n\u001b[38;5;159m32 ./lib/fuse.c:\u001b[m\u001b[93m280 col 11\u001b[m\u001b[38;5;159m:\u001b[m tmp, dlerror());"]
[83.200244, "o", "\r\r\n\u001b[38;5;121m-- More --\u001b[?25h"]
[85.181304, "o", "\u001b[m\u001b[34;1H\u001b[K\u001b[34;1H\u001b[38;5;159m33 ./lib/fuse.c:\u001b[m\u001b[93m543 col 34\u001b[m\u001b[38;5;159m:\u001b[m fprintf(stderr, \"fuse internal error: node %llu not found\\n\",\r\r\n\u001b[38;5;121m-- More --"]
[86.360325, "o", "\u001b[m\u001b[34;1H\u001b[K\u001b[34;1H\u001b[38;5;159m34 ./lib/fuse.c:\u001b[m\u001b[93m758 col 19\u001b[m\u001b[38;5;159m:\u001b[?25l\u001b[6;18H\u001b[m\u001b[34;96H:\u001b[6;18H\u001b[34;1H\u001b[K\u001b[34;1H:"]
[86.360448, "o", "\u001b[?2004h\u001b[?25h"]
[86.826566, "o", "c\u001b[?25l\u001b[?25h"]
[88.156223, "o", "p\u001b[?25l\u001b[?25h"]
[88.826274, "o", "\r"]
[88.826471, "o", "\u001b[?25l\u001b[97m\u001b[41mE553: No more items\u001b[m\r\r\n\u001b[38;5;121mPress ENTER or type command to continue\u001b[?25h"]
[90.044539, "o", "\u001b[?25l\u001b[6;18H\u001b[m\u001b[34;96H:\u001b[6;18H\u001b[34;1H\u001b[K\u001b[34;1H:\u001b[?2004h\u001b[?25h"]
[91.088923, "o", "c\u001b[?25l\u001b[?25h"]
[91.248166, "o", "n\u001b[?25l\u001b[?25h"]
[91.93615, "o", "\r\u001b[?25l(2 of 185): perror(\"open\");\r\r\n\u001b[38;5;121mPress ENTER or type command to continue\u001b[?25h"]
[93.353798, "o", "\u001b[?25l\u001b[24;18H\u001b[27m\u001b[23m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[2;9H\u001b[93mif\u001b[m (ret >= \u001b[95m0\u001b[m) {\u001b[3;17H*prev_size = arg.prev_size;\u001b[4;17H*new_size = arg.new_size;\u001b[5;9H} \u001b[93melse\u001b[m\u001b[6;17Hperror(\u001b[95m\"ioctl\"\u001b[m);\u001b[8;9Hfree(arg.buf);\u001b[9;9H\u001b[93mreturn\u001b[m ret;\r\n}\r\n\r\n\u001b[38;5;121mint\u001b[m main(\u001b[38;5;121mint\u001b[m argc, \u001b[38;5;121mchar\u001b[m **argv)\r\n{\u001b[14;9H\u001b[38;5;121msize_t\u001b[m param[\u001b[95m2\u001b[m] = { };\u001b[15;9H\u001b[38;5;121msize_t\u001b[m size, prev_size = \u001b[95m0\u001b[m, new_size = \u001b[95m0\u001b[m;\u001b[16;9H\u001b[38;5;121mchar\u001b[m cmd;\u001b[17;9H\u001b[38;5;121mint\u001b[m fd, i, rc;\u001b[19;9H\u001b[93mif\u001b[m (argc < \u001b[95m3\u001b[m)\u001b[20;17H\u001b[93mgoto\u001b[m usage;\u001b[22;9Hfd = open(argv[\u001b[95m1\u001b[m], O_RDWR);\u001b[23;9H\u001b[93mif\u001b[m (fd < \u001b[95m0\u001b[m) {\u001b[24;17Hperror(\u001b[95m\"open\"\u001b[m);\u001b[25;17H\u001b[93mreturn\u001b[m \u001b[95m1\u001b[m;\u001b[26;9H}\u001b[28;9Hcmd = tolower(argv[\u001b[95m2\u001b[m][\u001b[95m0\u001b[m]);\u001b[29;9Hargc -= \u001b[95m3\u001b[m;\u001b[30;9Hargv += \u001b[95m3\u001b[m;\u001b[32;9H\u001b[93mfor\u001b[m (i = \u001b[95m0\u001b[m; i < argc; i++) {\u001b[33;17H\u001b[38;5;121mchar\u001b[m *endp;\u001b[34;106H104,4-18      68%\u001b[24;18H\u001b[?25h"]
[94.510008, "o", "\u001b[?25l\u001b[34;96H:\u001b[24;18H\u001b[34;96H\u001b[K\u001b[34;1H:\u001b[?2004h\u001b[?25h"]
[94.929828, "o", "c\u001b[?25l\u001b[?25h"]
[95.111091, "o", "c\u001b[?25l\u001b[?25h"]
[95.261319, "o", "\u001b[?25l \u001b[?25h"]
[95.503384, "o", "3"]
[95.503515, "o", "\u001b[?25l\u001b[?25h"]
[96.094551, "o", "\r"]
[96.094687, "o", "\u001b[?25l(3 of 185): perror(\"ioctl\");"]
[96.101141, "o", "\u001b[28;34H\u001b[1;33r\u001b[1;1H\u001b[15M\u001b[1;34r\u001b[19;17Hparam[i] = strtoul(argv[i], &endp, \u001b[95m0\u001b[m);\u001b[20;17H\u001b[93mif\u001b[m (endp == argv[i] || *endp != \u001b[38;5;224m'\\0'\u001b[m)\u001b[21;25H\u001b[93mgoto\u001b[m usage;\u001b[22;9H}\u001b[24;9H\u001b[93mswitch\u001b[m (cmd) {\u001b[25;9H\u001b[93mcase\u001b[m \u001b[95m's'\u001b[m:\u001b[26;17H\u001b[93mif\u001b[m (!argc) {\u001b[27;25H\u001b[93mif\u001b[m (ioctl(fd, FIOC_GET_SIZE, &size)) {\u001b[28;33Hperror(\u001b[95m\"ioctl\"\u001b[m);\u001b[29;33H\u001b[93mreturn\u001b[m \u001b[95m1\u001b[m;\u001b[30;25H}\u001b[31;25Hprintf(\u001b[95m\"\u001b[m\u001b[38;5;224m%zu\\n\u001b[m\u001b[95m\"\u001b[m, size);\u001b[32;17H} \u001b[93melse\u001b[m {\u001b[33;25Hsize = param[\u001b[95m0\u001b[m];\u001b[34;1H\u001b[K\u001b[34;106H123,6-34      81%\r(3 of 185): perror(\"ioctl\");\u001b[34;106H\u001b[K\u001b[34;106H123,6-34      81%\u001b[28;34H\u001b[?25h"]
[97.159441, "o", "\u001b[?25l\u001b[34;96H:\u001b[28;34H\u001b[34;1H\u001b[K\u001b[34;1H:\u001b[?2004h\u001b[?25h"]
[97.46383, "o", "c\u001b[?25l\u001b[?25h"]
[97.623187, "o", "l\u001b[?25l\u001b[?25h"]
[97.907383, "o", "\r"]
[97.907633, "o", "\u001b[?25l\r\n\u001b[38;5;159m 1 ./example/cuse_client.c:\u001b[m\u001b[93m86 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"ioctl\");\r\r\n\u001b[38;5;159m 2 ./example/cuse_client.c:\u001b[m\u001b[93m104 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"open\");\r\r\n\u001b[30m\u001b[103m 3 ./example/cuse_client.c\u001b[m\u001b[38;5;159m:\u001b[m\u001b[93m123 col 6\u001b[m\u001b[38;5;159m:\u001b[m perror(\"ioctl\");"]
[97.907843, "o", "\r\r\n\u001b[38;5;159m 4 ./example/cuse_client.c:\u001b[m\u001b[93m130 col 6\u001b[m\u001b[38;5;159m:\u001b[m perror(\"ioctl\");\r\r\n\u001b[38;5;159m 5 ./example/invalidate_path.c:\u001b[m\u001b[93m238 col 20\u001b[m\u001b[38;5;159m:\u001b[m fprintf(stderr, \"error: no mountpoint specified\\n\");"]
[97.908094, "o", "\r\r\n\u001b[38;5;159m 6 ./example/invalidate_path.c:\u001b[m\u001b[93m262 col 57\u001b[m\u001b[38;5;159m:\u001b[m fprintf(stderr, \"pthread_create failed with %s\\n\", strerror(ret));\r\r\n\u001b[38;5;159m 7 ./example/ioctl_client.c:\u001b[m\u001b[93m52 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"open\");\r\r\n\u001b[38;5;159m 8 ./example/ioctl_client.c:\u001b[m\u001b[93m58 col 5\u001b[m\u001b[38;5;159m:\u001b[m perror(\"ioctl\");\r\r\n\u001b[38;5;159m 9 ./example/ioctl_client.c:\u001b[m\u001b[93m65 col 5\u001b[m\u001b[38;5;159m:\u001b[m perror(\"ioctl\");"]
[97.908175, "o", "\r\r\n\u001b[38;5;159m10 example/notify_inval_entry.c:\u001b[m\u001b[93m317 col 20\u001b[m\u001b[38;5;159m:\u001b[m strerror(ret));"]
[97.908405, "o", "\r\r\n\u001b[38;5;159m11 ./example/notify_inval_inode.c:\u001b[m\u001b[93m340 col 20\u001b[m\u001b[38;5;159m:\u001b[m strerror(ret));\r\r\n\u001b[38;5;159m12 ./example/notify_store_retrieve.c:\u001b[m\u001b[93m324 col 28\u001b[m\u001b[38;5;159m:\u001b[m strerror(-ret), -ret);\r\r\n\u001b[38;5;159m13 ./example/notify_store_retrieve.c:\u001b[m\u001b[93m398 col 20\u001b[m\u001b[38;5;159m:\u001b[m strerror(ret));"]
[97.908617, "o", "\r\r\n\u001b[38;5;159m14 ./example/null.c:\u001b[m\u001b[93m132 col 24\u001b[m\u001b[38;5;159m:\u001b[m opts.mountpoint, strerror(errno));\r\r\n\u001b[38;5;159m15 ./example/passthrough_ll.c:\u001b[m\u001b[93m288 col 6\u001b[m\u001b[38;5;159m:\u001b[m int error = ENOMEM;\r\r\n\u001b[38;5;159m16 ./example/passthrough_ll.c:\u001b[m\u001b[93m309 col 2\u001b[m\u001b[38;5;159m:\u001b[m error = errno;"]
[97.908689, "o", "\r\r\n\u001b[38;5;159m17 ./example/passthrough_ll.c:\u001b[m\u001b[93m316 col 22\u001b[m\u001b[38;5;159m:\u001b[m fuse_reply_err(req, error);"]
[97.908899, "o", "\r\r\n\u001b[38;5;159m18 ./example/passthrough_ll.c:\u001b[m\u001b[93m351 col 11\u001b[m\u001b[38;5;159m:\u001b[m goto error;\r\r\n\u001b[38;5;159m19 ./example/passthrough_ll.c:\u001b[m\u001b[93m362 col 10\u001b[m\u001b[38;5;159m:\u001b[m goto error;\r\r\n\u001b[38;5;159m20 ./example/passthrough_ll.c:\u001b[m\u001b[93m390 col 1\u001b[m\u001b[38;5;159m:\u001b[m error:"]
[97.909071, "o", "\r\r\n\u001b[38;5;159m21 ./example/passthrough_ll.c:\u001b[m\u001b[93m464 col 18\u001b[m\u001b[38;5;159m:\u001b[m to return an error here */\r\r\n\u001b[38;5;159m22 ./example/poll.c:\u001b[m\u001b[93m274 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"pthread_mutex_init\");"]
[97.90915, "o", "\r\r\n\u001b[38;5;159m23 ./example/poll.c:\u001b[m\u001b[93m280 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"pthread_attr_init\");"]
[97.909369, "o", "\r\r\n\u001b[38;5;159m24 ./example/poll.c:\u001b[m\u001b[93m286 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"pthread_create\");\r\r\n\u001b[38;5;159m25 ./example/poll_client.c:\u001b[m\u001b[93m47 col 5\u001b[m\u001b[38;5;159m:\u001b[m perror(\"open\");\r\r\n\u001b[38;5;159m26 ./example/poll_client.c:\u001b[m\u001b[93m65 col 5\u001b[m\u001b[38;5;159m:\u001b[m perror(\"select\");"]
[97.909545, "o", "\r\r\n\u001b[38;5;159m27 ./example/poll_client.c:\u001b[m\u001b[93m77 col 6\u001b[m\u001b[38;5;159m:\u001b[m perror(\"read\");\r\r\n\u001b[38;5;159m28 example/printcap.c:\u001b[m\u001b[93m96 col 4\u001b[m\u001b[38;5;159m:\u001b[m perror(\"mkdtemp\");"]
[97.909622, "o", "\r\r\n\u001b[38;5;159m29 ./lib/cuse_lowlevel.c:\u001b[m\u001b[93m309 col 17\u001b[m\u001b[38;5;159m:\u001b[m devname, strerror(errno));"]
[97.909681, "o", "\r\r\n\u001b[38;5;159m30 ./lib/fuse.c:\u001b[m\u001b[93m189 col 6\u001b[m\u001b[38;5;159m:\u001b[m int error;"]
[97.909887, "o", "\r\r\n\u001b[38;5;159m31 ./lib/fuse.c:\u001b[m\u001b[93m272 col 11\u001b[m\u001b[38;5;159m:\u001b[m tmp, dlerror());\r\r\n\u001b[38;5;159m32 ./lib/fuse.c:\u001b[m\u001b[93m280 col 11\u001b[m\u001b[38;5;159m:\u001b[m tmp, dlerror());\r\r\n\u001b[38;5;121m-- More --\u001b[?25h"]
[99.73336, "o", "\u001b[m\u001b[34;1H\u001b[K\u001b[34;1H\u001b[38;5;159m33 ./lib/fuse.c:\u001b[m\u001b[93m543 col 34\u001b[m\u001b[38;5;159m:\u001b[m fprintf(stderr, \"fuse internal error: node %llu not found\\n\","]
[99.733509, "o", "\r\r\n\u001b[38;5;121m-- More --"]
[100.433242, "o", "\u001b[m\u001b[34;1H\u001b[K\u001b[34;1H\u001b[38;5;159m34 ./lib/fuse.c:\u001b[m\u001b[93m758 col 19\u001b[m\u001b[38;5;159m:"]
[100.439829, "o", "\u001b[?25l\u001b[28;34H\u001b[27m\u001b[23m\u001b[29m\u001b[m\u001b[H\u001b[2J\u001b[1;9H\u001b[38;5;121mchar\u001b[m cmd;\u001b[2;9H\u001b[38;5;121mint\u001b[m fd, i, rc;\u001b[4;9H\u001b[93mif\u001b[m (argc < \u001b[95m3\u001b[m)\u001b[5;17H\u001b[93mgoto\u001b[m usage;\u001b[7;9Hfd = open(argv[\u001b[95m1\u001b[m], O_RDWR);\u001b[8;9H\u001b[93mif\u001b[m (fd < \u001b[95m0\u001b[m) {\u001b[9;17Hperror(\u001b[95m\"open\"\u001b[m);\u001b[10;17H\u001b[93mreturn\u001b[m \u001b[95m1\u001b[m;\u001b[11;9H}\u001b[13;9Hcmd = tolower(argv[\u001b[95m2\u001b[m][\u001b[95m0\u001b[m]);\u001b[14;9Hargc -= \u001b[95m3\u001b[m;\u001b[15;9Hargv += \u001b[95m3\u001b[m;\u001b[17;9H\u001b[93mfor\u001b[m (i = \u001b[95m0\u001b[m; i < argc; i++) {\u001b[18;17H\u001b[38;5;121mchar\u001b[m *endp;\u001b[19;17Hparam[i] = strtoul(argv[i], &endp, \u001b[95m0\u001b[m);\u001b[20;17H\u001b[93mif\u001b[m (endp == argv[i] || *endp != \u001b[38;5;224m'\\0'\u001b[m)\u001b[21;25H\u001b[93mgoto\u001b[m usage;\u001b[22;9H}\u001b[24;9H\u001b[93mswitch\u001b[m (cmd) {\u001b[25;9H\u001b[93mcase\u001b[m \u001b[95m's'\u001b[m:\u001b[26;17H\u001b[93mif\u001b[m (!argc) {\u001b[27;25H\u001b[93mif\u001b[m (ioctl(fd, FIOC_GET_SIZE, &size)) {\u001b[28;33Hperror(\u001b[95m\"ioctl\"\u001b[m);\u001b[29;33H\u001b[93mreturn\u001b[m \u001b[95m1\u001b[m;\u001b[30;25H}\u001b[31;25Hprintf(\u001b[95m\"\u001b[m\u001b[38;5;224m%zu\\n\u001b[m\u001b[95m\"\u001b[m, size);\u001b[32;17H} \u001b[93melse\u001b[m {\u001b[33;25Hsize = param[\u001b[95m0\u001b[m];\u001b[34;106H123,6-34      81%\u001b[28;34H\u001b[?25h"]
[101.904143, "o", "\u001b[?25l\u001b[34;96H:\u001b[28;34H\u001b[34;96H\u001b[K\u001b[34;1H:\u001b[?2004h\u001b[?25h"]
[102.2539, "o", "c\u001b[?25l\u001b[?25h"]
[103.190808, "o", "n\u001b[?25l\u001b[?25h"]
[103.550623, "o", "\u001b[?25l \u001b[?25h"]
[104.663329, "o", "\r"]
[104.663485, "o", "\u001b[?25l(4 of 185): perror(\"ioctl\");"]
[104.664529, "o", "\u001b[28;34H\u001b[1;33r\u001b[1;1H\u001b[7M\u001b[1;34r\u001b[27;25H\u001b[93mif\u001b[m (ioctl(fd, FIOC_SET_SIZE, &size)) {\u001b[28;33Hperror(\u001b[95m\"ioctl\"\u001b[m);\u001b[29;33H\u001b[93mreturn\u001b[m \u001b[95m1\u001b[m;\u001b[30;25H}\u001b[31;17H}\u001b[32;17H\u001b[93mreturn\u001b[m \u001b[95m0\u001b[m;\u001b[34;1H\u001b[K\u001b[34;106H130,6-34      87%\r(4 of 185): perror(\"ioctl\");\u001b[34;106H\u001b[K\u001b[34;106H130,6-34      87%\u001b[28;34H\u001b[?25h"]
[106.561614, "o", "\u001b[?25l\u001b[34;96H:\u001b[28;34H\u001b[34;1H\u001b[K\u001b[34;1H:\u001b[?2004h\u001b[?25h"]
[106.946553, "o", "q\u001b[?25l\u001b[?25h"]
[107.230922, "o", "a\u001b[?25l\u001b[?25h"]
[108.359743, "o", "\r"]
[108.365156, "o", "\u001b[?25l\u001b[?2004l\u001b[23;2t\u001b[23;1t\u001b[22;2t\u001b[22;1t\u001b[23;2t\u001b[23;1t"]
[108.365355, "o", "\u001b[34;1H\u001b[K\u001b[34;1H\u001b[?2004l\u001b[?1l\u001b>\u001b[?25h\u001b[?1049l"]
[108.411487, "o", "\u001b]0;test@localhost: ~/git/libfuse\u0007\u001b[01;32mtest@localhost\u001b[00m:\u001b[01;34m~/git/libfuse\u001b[00m$ "]
[108.833501, "o", "e"]
[109.041071, "o", "x"]
[109.163417, "o", "i"]
[109.282557, "o", "t"]
[109.479111, "o", "\r\n"]
[109.479767, "o", "exit\r\n"]
